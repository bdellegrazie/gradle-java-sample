/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

val versionCatalog = extensions.getByType<VersionCatalogsExtension>().named("libs")

plugins {
    // Apply the java Plugin to add support for Java.
    java
    id("errorprone")
    id("checkstyle-conventions")
    id("jacoco-conventions")
    id("pmd-conventions")
    id("spotbugs-conventions")
    id("dependency-check-conventions")
    id("sonar-project-conventions")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    constraints {
        // Define dependency versions as constraints
        versionCatalog.findLibrary("apache-commonsText").ifPresent() {
          implementation(it)
        }
    }
    // Test dependencies
    testImplementation(platform(versionCatalog.findLibrary("junit-bom").get()))
    testImplementation(versionCatalog.findLibrary("junit-jupiterApi").get())
    testRuntimeOnly(versionCatalog.findLibrary("junit-jupiterEngine").get())
    testRuntimeOnly(versionCatalog.findLibrary("junit-jupiterPlatformLauncher").get())
}

tasks.named<Test>("test") {
    useJUnitPlatform()
}

testing {
    suites {
        // Configure the built-in test suite
        @Suppress("UNUSED_VARIABLE")
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter(versionCatalog.findVersion("junit").get().toString())
        }
    }
}
